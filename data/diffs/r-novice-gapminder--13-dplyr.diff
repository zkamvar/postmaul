diff --git a/home/zhian/Documents/Carpentries/Git/zkamvar--postmaul/data/rmd-repos/swcarpentry--r-novice-gapminderR3/_episodes/13-dplyr.md b/home/zhian/Documents/Carpentries/Git/zkamvar--postmaul/data/rmd-repos/swcarpentry--r-novice-gapminderR4/_episodes/13-dplyr.md
index 0498fd3..681dcef 100644
--- a/home/zhian/Documents/Carpentries/Git/zkamvar--postmaul/data/rmd-repos/swcarpentry--r-novice-gapminderR3/_episodes/13-dplyr.md
+++ b/home/zhian/Documents/Carpentries/Git/zkamvar--postmaul/data/rmd-repos/swcarpentry--r-novice-gapminderR4/_episodes/13-dplyr.md
@@ -194,10 +194,10 @@ str(gapminder)
 
 ~~~
 'data.frame':	1704 obs. of  6 variables:
- $ country  : Factor w/ 142 levels "Afghanistan",..: 1 1 1 1 1 1 1 1 1 1 ...
+ $ country  : chr  "Afghanistan" "Afghanistan" "Afghanistan" "Afghanistan" ...
  $ year     : int  1952 1957 1962 1967 1972 1977 1982 1987 1992 1997 ...
  $ pop      : num  8425333 9240934 10267083 11537966 13079460 ...
- $ continent: Factor w/ 5 levels "Africa","Americas",..: 3 3 3 3 3 3 3 3 3 3 ...
+ $ continent: chr  "Asia" "Asia" "Asia" "Asia" ...
  $ lifeExp  : num  28.8 30.3 32 34 36.1 ...
  $ gdpPercap: num  779 821 853 836 740 ...
 ~~~
@@ -214,20 +214,21 @@ str(gapminder %>% group_by(continent))
 
 ~~~
 tibble [1,704 × 6] (S3: grouped_df/tbl_df/tbl/data.frame)
- $ country  : Factor w/ 142 levels "Afghanistan",..: 1 1 1 1 1 1 1 1 1 1 ...
+ $ country  : chr [1:1704] "Afghanistan" "Afghanistan" "Afghanistan" "Afghanistan" ...
  $ year     : int [1:1704] 1952 1957 1962 1967 1972 1977 1982 1987 1992 1997 ...
  $ pop      : num [1:1704] 8425333 9240934 10267083 11537966 13079460 ...
- $ continent: Factor w/ 5 levels "Africa","Americas",..: 3 3 3 3 3 3 3 3 3 3 ...
+ $ continent: chr [1:1704] "Asia" "Asia" "Asia" "Asia" ...
  $ lifeExp  : num [1:1704] 28.8 30.3 32 34 36.1 ...
  $ gdpPercap: num [1:1704] 779 821 853 836 740 ...
  - attr(*, "groups")= tibble [5 × 2] (S3: tbl_df/tbl/data.frame)
-  ..$ continent: Factor w/ 5 levels "Africa","Americas",..: 1 2 3 4 5
-  ..$ .rows    :List of 5
+  ..$ continent: chr [1:5] "Africa" "Americas" "Asia" "Europe" ...
+  ..$ .rows    : list<int> [1:5] 
   .. ..$ : int [1:624] 25 26 27 28 29 30 31 32 33 34 ...
   .. ..$ : int [1:300] 49 50 51 52 53 54 55 56 57 58 ...
   .. ..$ : int [1:396] 1 2 3 4 5 6 7 8 9 10 ...
   .. ..$ : int [1:360] 13 14 15 16 17 18 19 20 21 22 ...
   .. ..$ : int [1:24] 61 62 63 64 65 66 67 68 69 70 ...
+  .. ..@ ptype: int(0) 
   ..- attr(*, ".drop")= logi TRUE
 ~~~
 {: .output}
@@ -256,6 +257,13 @@ gdp_bycontinents <- gapminder %>%
 ~~~
 {: .language-r}
 
+
+
+~~~
+`summarise()` ungrouping output (override with `.groups` argument)
+~~~
+{: .output}
+
 ![](../fig/13-dplyr-fig3.png)
 
 
@@ -285,6 +293,19 @@ even better.
 > >lifeExp_bycountry <- gapminder %>%
 > >    group_by(country) %>%
 > >    summarize(mean_lifeExp = mean(lifeExp))
+> >~~~
+> >{: .language-r}
+> >
+> >
+> >
+> >~~~
+> >`summarise()` ungrouping output (override with `.groups` argument)
+> >~~~
+> >{: .output}
+> >
+> >
+> >
+> >~~~
 > >lifeExp_bycountry %>%
 > >    filter(mean_lifeExp == min(mean_lifeExp) | mean_lifeExp == max(mean_lifeExp))
 > >~~~
@@ -295,7 +316,7 @@ even better.
 > >~~~
 > ># A tibble: 2 x 2
 > >  country      mean_lifeExp
-> >  <fct>               <dbl>
+> >  <chr>               <dbl>
 > >1 Iceland              76.5
 > >2 Sierra Leone         36.8
 > >~~~
@@ -318,7 +339,7 @@ even better.
 > >~~~
 > ># A tibble: 1 x 2
 > >  country      mean_lifeExp
-> >  <fct>               <dbl>
+> >  <chr>               <dbl>
 > >1 Sierra Leone         36.8
 > >~~~
 > >{: .output}
@@ -337,7 +358,7 @@ even better.
 > >~~~
 > ># A tibble: 1 x 2
 > >  country mean_lifeExp
-> >  <fct>          <dbl>
+> >  <chr>          <dbl>
 > >1 Iceland         76.5
 > >~~~
 > >{: .output}
@@ -355,6 +376,13 @@ gdp_bycontinents_byyear <- gapminder %>%
 ~~~
 {: .language-r}
 
+
+
+~~~
+`summarise()` regrouping output by 'continent' (override with `.groups` argument)
+~~~
+{: .output}
+
 That is already quite powerful, but it gets even better! You're not limited to defining 1 new variable in `summarize()`.
 
 
@@ -368,6 +396,13 @@ gdp_pop_bycontinents_byyear <- gapminder %>%
 ~~~
 {: .language-r}
 
+
+
+~~~
+`summarise()` regrouping output by 'continent' (override with `.groups` argument)
+~~~
+{: .output}
+
 ## count() and n()
 
 A very common operation is to count the number of observations for each
@@ -389,14 +424,12 @@ gapminder %>%
 
 
 ~~~
-# A tibble: 5 x 2
-  continent     n
-  <fct>     <int>
-1 Africa       52
-2 Asia         33
-3 Europe       30
-4 Americas     25
-5 Oceania       2
+  continent  n
+1    Africa 52
+2      Asia 33
+3    Europe 30
+4  Americas 25
+5   Oceania  2
 ~~~
 {: .output}
 
@@ -413,10 +446,17 @@ gapminder %>%
 
 
 
+~~~
+`summarise()` ungrouping output (override with `.groups` argument)
+~~~
+{: .output}
+
+
+
 ~~~
 # A tibble: 5 x 2
   continent se_le
-  <fct>     <dbl>
+  <chr>     <dbl>
 1 Africa    0.366
 2 Americas  0.540
 3 Asia      0.596
@@ -441,10 +481,17 @@ gapminder %>%
 
 
 
+~~~
+`summarise()` ungrouping output (override with `.groups` argument)
+~~~
+{: .output}
+
+
+
 ~~~
 # A tibble: 5 x 5
   continent mean_le min_le max_le se_le
-  <fct>       <dbl>  <dbl>  <dbl> <dbl>
+  <chr>       <dbl>  <dbl>  <dbl> <dbl>
 1 Africa       48.9   23.6   76.4 0.366
 2 Americas     64.7   37.6   80.7 0.540
 3 Asia         60.1   28.8   82.6 0.596
@@ -471,6 +518,13 @@ gdp_pop_bycontinents_byyear <- gapminder %>%
 ~~~
 {: .language-r}
 
+
+
+~~~
+`summarise()` regrouping output by 'continent' (override with `.groups` argument)
+~~~
+{: .output}
+
 ## Connect mutate with logical filtering: ifelse
 
 When creating new variables, we can hook this with a logical condition. A simple combination of
@@ -491,7 +545,19 @@ gdp_pop_bycontinents_byyear_above25 <- gapminder %>%
               sd_pop = sd(pop),
               mean_gdp_billion = mean(gdp_billion),
               sd_gdp_billion = sd(gdp_billion))
+~~~
+{: .language-r}
+
+
+
+~~~
+`summarise()` regrouping output by 'continent' (override with `.groups` argument)
+~~~
+{: .output}
+
+
 
+~~~
 ## updating only if certain condition is fullfilled
 # for life expectations above 40 years, the gpd to be expected in the future is scaled
 gdp_future_bycontinents_byyear_high_lifeExp <- gapminder %>%
@@ -502,6 +568,13 @@ gdp_future_bycontinents_byyear_high_lifeExp <- gapminder %>%
 ~~~
 {: .language-r}
 
+
+
+~~~
+`summarise()` regrouping output by 'continent' (override with `.groups` argument)
+~~~
+{: .output}
+
 ## Combining `dplyr` and `ggplot2`
 
 First install and load ggplot2:
@@ -595,6 +668,13 @@ gapminder %>%
 > >    arrange(desc(mean_lifeExp))
 > >~~~
 > >{: .language-r}
+> >
+> >
+> >
+> >~~~
+> >`summarise()` ungrouping output (override with `.groups` argument)
+> >~~~
+> >{: .output}
 > {: .solution}
 {: .challenge}
 
